# .github/workflows/release.yml
name: Release

on:
  push:
    branches: [main]
  pull_request:

jobs:
  # PR Preview releases (keep this part!)
  preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish PR Preview
        run: |
          VERSION=$(node -p "require('./package.json').version")-pr.${{ github.event.pull_request.number }}.$(date +%s)
          npm version $VERSION --no-git-tag-version
          npm publish --tag pr-${{ github.event.pull_request.number }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Changesets release (replaces your dev and production releases)
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
          title: "ðŸš€ Release"
          commit: "chore: release"
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Optional: Publish dev version if no release happened
      - name: Publish Dev Release
        if: steps.changesets.outputs.published != 'true'
        run: |
          VERSION=$(node -p "require('./package.json').version")-dev.$(date +%Y%m%d%H%M%S)
          npm version $VERSION --no-git-tag-version
          npm publish --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
